swagger: "2.0"
info:
  description: This is the swagger file that goes with our server code
  version: "1.0.0"
  title: Swagger REST Article
consumes:
  - "application/json"
produces:
  - "application/json"

basePath: "/api"



paths:
                
  /notebook:

    get:
      operationId: notebook.getAllNotebook
      tags:
        - Notebook
      summary: Read the entire list of notebook
      description: Read the list of notebook
      responses:
        200:
          description: "Successful read notebook list operation"
          schema:
            type: array
            items:
              properties:
                id:
                  type: integer
                name:
                  type: string
                created_date:
                  type: string
                docker_image_name:
                  type: string
                deployment_name:
                  type: string
          examples:
            success:
              value:
                - id: 1
                  name: 'first notebook'
                  created_date: '2020-03-27 21:00:00'
                  docker_image_name: 'This is a docker image'
                  deployment_name: 'deployment'
  
                - id: 2
                  name: 'second notebook'
                  created_date: '2020-03-27 22:00:00'
                  docker_image_name: 'This is a docker image'
                  deployment_name: 'deployment'


    post:
      operationId: notebook.newNotebook
      tags:
        - Notebook
      summary: Create a notebook and add it to the notebooks list
      description: Create a new notebook in the notebooks list
      parameters:
        - name: notebook
          in: body
          description: Notebook to create
          required: True
          schema:
            type: object
            properties:
              name:
                type: string
                description:  name of notebook to create

      responses:
        201:
          description: Successfully created notebook in list
          schema:
            type: object
            properties:
              id:
                type: integer
              name:
                type: string
              created_date:
                  type: string
              docker_image_name:
                type: string
              deployment_name:
                type: string
              status:
                type: string
          examples:
            success:
              value:
                - id: 3
                  name: 'New Notebook'
                  created_date: '2020-10-31 21:05:46'
                  docker_image_name: 'This is a docker image'
                  deployment_name: 'deployment'
                  status: 'Done'

  /notebook/{id}:
    get:
      operationId: "notebook.getNotebookById"
      tags:
        - Notebook
      summary: Read one notebook from the notebooks list
      description: Read one notebook from the notebooks list
      parameters:
        - name: id
          in: path
          description: "id"
          type: integer
          required: True
      responses:
        201:
          description: Successfully read notebook from notebooks list operation
          schema:
            properties:
              id:
                type: integer
              name:
                type: "string"
              created_date:
                type: "string"
              docker_image_name:
                type: string
              deployment_name:
                type: string


          examples:
            success:
              value:
                - id: 1
                  name: 'first notebook'
                  created_date: '2020-10-31 21:05:46'
                  docker_image_name: 'This is a docker image'
                  deployment_name: 'deployment'

    put:
      operationId: notebook.updateNotebook
      tags:
        - Notebook
      summary: Update a notebook in the notebooks list
      description: Update a notebook in the notebooks list
      parameters:
        - name: id
          in: path
          description: "id of the notebook to update in the list"
          type: integer
          required: True

        - name: notebook
          in: body
          schema:
            type: object
            properties:
              name:
                type: string

      responses:
        200:
          description: Successfully updated notebook from notebooks list operation
          schema:
            properties:
              id:
                type: integer
              name:
                type: "string"
              created_date:
                type: "string"
              docker_image_name:
                 type: string
              deployment_name:
                type: string
          examples:
            success:
              value:
                - id: 1
                  name: 'new notebook name'
                  created_date: '2020-10-31 21:05:46'
                  docker_image_name: 'This is a docker image'
                  deployment_name: 'deployment'


    delete:
      operationId: notebook.deleteNotebook
      tags:
        - Notebook
      summary: Delete a notebook from the notebooks list
      description: Delete a notebook
      parameters:
        - name: id
          in: path
          type: integer
          required: True
      responses:
        200:
          description: Successfully deleted a notebook from notebook list

  /training:
    get:
      operationId: training.getAllTraining
      tags:
        - Training
      summary: Read the entire list of training
      description: Read the list of training
      responses:
        200:
          description: "Successful read training list operation"
          schema:
            type: array
            items:
              properties:
                id:
                  type: integer
                name:
                  type: string
                created_date:
                  type: string
                endpoints_count:
                  type: integer
                  #type: array
                  #items:
                  #  properties:
                  #    training_id:
                  #      type: integer
                  #    endpoint_id:
                  #      type: integer
                  #    endpoint_name:
                  #      type: string
                  #    createdDate:
                  #      type: string
          examples:
            success:
              value:
                - id: 5
                  name: 'first training'
                  created_date: '2020-03-27 21:00:00'
                  endpoints_count: 2
                    
                - id: 3
                  name: 'second training'
                  created_date: '2020-03-27 22:00:00' 
                  endpoints: 3
                  
    post:
      operationId: training.newTraining
      tags:
        - Training
      summary: Create a training and add it to the trainings list
      description: Create a new training in the trainings list
      parameters:
        - name: training
          in: body
          description: training to create
          required: True
          schema:
            type: object
            properties:
              name:
                type: string
                description:  name of training to create

      responses:
        201:
          description: Successfully created training in list
          schema:
            type: object
            properties:
              name:
                type: string
              id:
                type: integer
              created_date:
                type: string
              status:
                type: string
          examples:
            success:
              value:
                  id: 14
                  name: 'a new training'
                  created_date: '2020-03-27 19:00:02'
                  status: 'Done'

  /training/{id}:
    put:
      operationId: training.updateTraining
      tags:
        - Training
      summary: Update a training in the trainings list
      description: Update a training in the trainings list
      parameters:
        - name: id
          in: path
          description: "id of the training to update in the list"
          type: integer
          required: True

        - name: training
          in: body
          schema:
            type: object
            properties:
              name:
                type: string

      responses:
        200:
          description: Successfully updated training
          schema:
            properties:
              id:
                type: integer
              name:
                type: string
              created_date:
                type: string
              endpoints_count:
                type: integer
          examples:
            success:
              value:
                id: 4
                name: 'Training name'
                created_date: '2020-03-27 19:00:02'

    get:
      operationId: training.getTrainingById
      tags:
        - Training
      summary: Read one training from the trainings list
      description: Read one training from the trainings list
      parameters:
        - name: id
          in: path
          description: "id"
          type: integer
          required: True
      responses:
        200:
          description: Successfully read training from trainings list operation
          schema:
            properties:
              name:
                type: "string"
              id:
                type: integer
              created_date:
                type: "string"
              endpoints_count:
                type: integer
          examples:
            success:
              value:
                training_id: 7
                training_name: 'my training'
                createdDate: '2020-03-26 21:02:00'
                endpoints_count: 2              

    delete:
      operationId: training.deleteTraining
      tags:
        - Training
      summary: Delete a training from the trainings list
      description: Delete a training
      parameters:
        - name: id
          in: path
          type: integer
          required: True
      responses:
        200:
          description: Successfully deleted a training from training list

  /endpoints:
    get:
      operationId: endpoint.getAllEndpoint
      tags:
        - Endpoint
      summary: Read the entire list of endpoint
      description: Read the list of endpoint
      responses:
        200:
          description: "Successfull read endpoint list operation"
          schema:
            type: array
            items:
              properties:
                id:
                  type: integer
                name:
                  type: string
                created_date:
                  type: string
                training:
                  type: object
                  properties:
                    id:
                      type: integer
                    name:
                      type: string
                    created_date:
                      type: string

          examples:
            success:
              value:
                - endpoint_id: 5
                  endpoint_name: 'first endpoint'
                  createdDate: '2020-03-27 21:00:00'
                  training:
                    id: 3
                    name: 'training name'
                    created_date: '2020-03-27 20:00:00'


                - endpoint_id: 3
                  endpoint_name: 'second endpoint'
                  createdDate: '2020-03-27 22:00:00' 
                  training:
                    id: 7
                    name: 'training name'
                    created_date: '2020-03-27 20:00:00'
                              
  /endpoints/endpoint:             
    post:
      operationId: endpoint.newEndpoint
      tags:
        - Endpoint
      summary: Create a endpoint and add it to the endpoints list
      description: Create a new endpoint in the endpoints list
      parameters:
        - name: endpoint
          in: body
          description: endpoint to create
          required: True
          schema:
            type: object
            properties:
              name:
                type: string
              training_id:
                type: integer
                
      responses:
        201:
          description: Successfully created endpoint in list
          schema:
            type: object
            properties:
              id:
                type: integer
              name:
                type: string
              created_date:
                type: string
              status:
                type: string
              training:
                type: object
                properties:
                  id:
                    type: integer
                  name:
                    type: string
                  created_date:
                    type: string              
          examples:
            success:
              value:
                endpoint_id: 14
                endpoint_name: 'newEndpoint'      
                created_date: '2020-03-27 19:00:02'
                status: 'Done'
                training:
                  id: 9
                  name: 'training name'
                  created_date: '2020-03-27 14:00:02'
        409:
          description: 'Endpoint already exists'

  /endpoint/{id}:
    put:
      operationId: endpoint.updateEndpoint
      tags:
        - Endpoint
      summary: Update a endpoint in the endpoints list
      description: Update a endpoint in the endpoints list
      parameters:
        - name: id
          in: path
          description: Id of the endpoint associated with a person
          type: integer
          required: True
        - name: endpoint
          in: body
          schema:
            type: object
            properties:
              name:
                type: string
              training_id:
                type: integer

      responses:
        200:
          description: 'Endpoint updated Successfully'
          schema:
            properties:
              id:
                type: string
              name:
                type: string
              created_date:
                type: string
              training:
                type: object
                properties:
                  id:
                    type: integer
                  name:
                    type: string
                  created_date:
                    type: string
          examples:
            success:
              value:
                endpoint_id: 14
                endpoint_name: 'Endpoint updated'      
                created_date: '2020-03-27 19:00:02'
                status: 'Done'
                training:
                  id: 9
                  name: 'training name'
                  created_date: '2020-03-27 14:00:02'
        404:
          description: 'not found one endpoint with this id'

    get:
      operationId: "endpoint.getEndpointById"
      tags:
        - Endpoint
      summary: Read one endpoint from the endpoints list
      description: Read one endpoint from the endpoints list
      parameters:
        - name: id
          in: path
          description: "id"
          type: integer
          required: True
      responses:
        201:
          description: Successfully read endpoint from endpoints list operation
          schema:
            properties:
              id:
                type: integer
              name:
                type: "string"
              created_date:
                type: "string"
              training:
                type: object
                properties:
                  id:
                    type: integer
                  name:
                    type: string
                  created_date:
                    type: string                
          examples:
            success:
              value:
                id: 7
                name: 'OneEndpoint'
                created_date: '2020-03-26 21:02:00'
                training:
                  id: 9
                  name: 'training name'
                  created_date: '2020-03-27 14:00:02'             

        404:
          description: 'Unable to find the endpoint with given endpoint_id'

    delete:
      operationId: endpoint.deleteEndpoint
      tags:
        - Endpoint
      summary: Delete a endpoint from the endpoints list
      description: Delete a endpoint
      parameters:
        - name: id
          in: path
          type: integer
          required: True

      responses:
        200:
          description: Successfully deleted a endpoint from endpoint list
        404:
          description: 'not found endpoint with the given endpoint_id'